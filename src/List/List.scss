@import "../shared";

.table {
   --th-padding-top: 0px;
   --exp-padding-left: 0px;  /* space for expanders if needed */

   display: flex;
   flex-flow: column nowrap;
   width: 100%;
   height: 100%;

   .tbody {
      min-height: 20px;
   }

   .tr {
      display: flex;
      flex-flow: row nowrap;
      line-height: var(--row-height);
      height: var(--row-height);
      box-sizing: border-box;
   }
   .trgroup {
      width: 100%;
   }
   .th,
   .td {
      display: inline-block;

      // Basis value doesn't matter. We just want all columns to request the
      // same amount when they do not specify an explicit width, that way
      // columns stay aligned. Otherwise, if column 1's content is large in
      // row 1 than in row2, they will not be aligned.
      flex: 1 1 100px;

      border-style: solid;
      border-color: var(--table-border);
      border-width: var(--table-horiz-border-width) var(--table-vert-border-width);
      box-sizing: border-box;
      padding: var(--th-padding-top) 5px;
      overflow: hidden;  /* obey column sizes */
      min-width: 20px;
      white-space: nowrap;  /* lines should always use constant height */
      text-overflow: ellipsis;
      text-align: left;     // Default alignment
   }
   .th {
      font-weight: bold;
   }
   .thead .tr {
      border-bottom: 1px solid var(--table-border);
      margin-right: var(--scrollbar-width);
   }
   .tfoot .tr {
      border-top: 1px solid var(--table-border);
   }

   :is(.th,.td).rightBorder {
      border-right: 1px solid var(--table-border);
   }

   /**
    * Always display the scrollbar: otherwise it ends up resizing the width of
    * tbody when it appears, and the header's width is no longer in sync. We
    * style it to make it less like a gray block though, using either standard
    * CSS (firefox), or -webkit specific ones (Chrome + Safari)
    *    https://alligator.io/css/css-scrollbars/
    */

   // ??? Behavior in firefox is inconsistent: sometimes the scrollbar overlaps
   // the tbody, sometimes it is displayed besides it.
   .tbody .tr {
      width: 100%;
   }

   .tbody > div {
      scrollbar-color: var(--scrollbar-fg) var(--scrollbar-bg);  /* firefox */
   }

   /**
    * Show borders
    */
   &.borders {
      .tr + .tr {
         border-top: 1px solid var(--gray-100);
      }
      .td + .td,
      .th + .th {
         border-left: 1px solid var(--gray-100);
      }
      .trgroup {
         border: 1px solid var(--gray-400);
      }
   }

   /**
    * Alternate row colors
    */
   .tr.odd {
      @include set-colors(table-alternate-row);
   }

   /**
    * Expandable rows
    */
   &.expandableRows {
      --exp-padding-left: 16px;  // match JS INDENT_LEVEL

      .tr.expandable :is(.td,.th).expander::before,
      .trgroup.expandable :is(.td,.th).expander::before {
         @include set-colors(table-expand-arrow);
         content: "\f0da";
         font: normal normal normal 14px/1 FontAwesome;
         text-rendering: auto;
         width: var(--exp-padding-left);
         margin-left: calc(var(--exp-padding-left) * -1);
         font-size: 1.4em;
         -webkit-font-smoothing: antialiased;
         -moz-osx-font-smoothing: grayscale;
         display: block;
         cursor: pointer;
         float: left;
         transition: transform 0.8s;

         position: absolute; // arrow not hidden by the cell's overflow:hidden
      }
      .tr.collapsed,
      .trgroup.collapsed {
         .tr:not(.expander) :is(.th,.td) {
            transition: height 0.2s, padding 0.2s;
            height: 0;
            padding: 0 0;
         }
         & .td.expander::before {
            transform: rotateZ(0) translate(0,0);
         }
      }
      .tr.expanded,
      .trgroup.expanded {
         .tr:not(.expander) :is(.th,.td) {
            transition: height 0.2s, padding 0.2s;
         }
         & .td.expander::before {
            transform: rotateZ(90deg) translate(25%,20%);
         }
      }

      .tr,
      .trgroup {
         padding-left: var(--exp-padding-left);
      }
      .trgroup .tr {
         padding-left: 0;
      }
   }

   /**
    * Highlight row under the mouse cursor. Rows can be grouped so that they
    * are all highlighted when the mouse is over any of them, used for split
    * transactions.
    */
   .tbody .trgroup:hover .tr,
   .tbody .tr:hover {
      @include set-colors(table-hover);
   }

   /**
    * Show sorting icons
    */
   .thead {
      .th.sorted-down:after,
      .th.sorted-up:after,
      .tr:hover .th.sortable:after {
         display: inline-block;
         font: normal normal normal 14px/1 FontAwesome;
         text-rendering: auto;
         margin-left: 5px;
         -webkit-font-smoothing: antialiased;
         -moz-osx-font-smoothing: grayscale;
      }
      .th.sortable {
         cursor: pointer;  /* indicate that we can sort by clicking */
      }
      .tr:hover .th.sortable:after {
         content: "\f0dc";
         position: absolute;  /* do not impact the rest of the layout */
         padding-top: var(--th-padding-top);
      }
      .tr:hover .th.sortable.sorted-down:after,
      .th.sorted-down:after {
         content: "\f0de";
      }
      .tr:hover .th.sortable.sorted-up:after,
      .th.sorted-up:after {
         content: "\f0dd";
      }
   }

   /**
    * Some standard sizing for columns.
    * Do not use units like 'ch' since they depend on the font-weight and would
    * result in different widths in header and body unfortunately.
    */
   .date {
      flex: 0 1 100px;
   }
   td.class {
      @include numeric-font
   }
   .accountsActions {
      flex: 0 1 80px;
   }
   .price {
      flex: 0 1 100px;
      text-align: right;
   }
   .amount {
      flex: 0 1 110px;
      text-align: right;
   }
   .shares {
      flex: 0 1 110px;
      text-align: right;
   }
   .percent {
      flex: 0 1 100px;
      text-align: right;
   }
   .closed {
      flex: 0 1 60px;
   }
}

.table .tbody {
   flex: 1 1;  /* needed for proper sizing of the react-window */
}

/* Warning for inconsistent data */
.table .td.warn:before {
   @include set-colors(table-warn);
   content: '\f06a';
   font: normal normal normal 14px/1 FontAwesome;
   margin-right: 2px;
}
