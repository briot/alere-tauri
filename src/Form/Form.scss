@import "../shared";

input,
button,
textarea,
select {
   @include set-colors(input);
   border: 1px solid var(--input-border);
   padding: 0 0.25em;
   font-size: 1rem;
   appearance: auto;  // show the arrow (that was hidden by the global reset

   &:focus {
      outline: 3px solid var(--input-focus-color);
   }
}

.primary :is(input, .select),
button.primary {
   @include set-colors(input-primary);
   border: 1px solid var(--input-primary-border);
}
input:invalid,
.select.invalid {
   @include set-colors(input-error);
   border-color: var(--input-error-border);
}

.disabled button:hover {
   filter: brightness(100%); /* restore normal lightness */
}
.disabled,
.disabled :is(span, input, button, .selector),
button:disabled {
   pointer-events: none;
   opacity: 0.75;
}

textarea,
input[type=text] {
   flex: 1 1;
   min-width: 120px;
}


button {
   font-size: 1rem;
   text-align: center;
   cursor: pointer;
   min-width: 4ch;
   &:hover {
      filter: brightness(var(--input-brightness-hover));
   }
   &.danger {
      @include set-colors(input-invalid);
   }
}

.button-bar {
   padding: 10px 0;
   display: flex;
   flex-wrap: nowrap;
   justify-content: flex-end;

   flex: 1 1 100%;  // as a child, should occupy the whole width

   button {
      min-width: 10ch;
      min-height: 2em;
      border-radius: 0.5em;
   }
}

form {
   --vert-spacing: .5em;
   --input-height: 25px;

   fieldset {
//      border: 0;
//      border-top: 1px solid var(--gray-400);
      border: 1px solid var(--gray-400);
      padding: 10px;
   }

   fieldset + fieldset {
      margin-top: 20px;
   }

   legend {
      font-weight: bold;
      margin: 0;   // use 0 0 0 -10px  when showing no border
      padding: 0 10px 0 0;
   }
   label {
      margin: var(--vert-spacing) 0;
      white-space: nowrap;
      text-align: left;
      font-weight: normal;

      display: flex;
      flex-flow: row nowrap;
      align-items: stretch;  // form elements should use full height
      line-height: var(--input-height);

      > span {
         margin-right: 10px;   /* space between text and input field */
         min-width: 100px;     /* basic alignment of labels and fields */
      }
   }
   .select {
      --row-height: 20px;  /* must match ROW_HEIGHT in javascript */

      .menu {
         @include set-colors(input);
         border: 1px solid var(--input-border);
         max-height: calc(15 * var(--row-height));
      }

      .option {
         cursor: pointer;
         height: var(--row-height);
         font-weight: normal;
         display: flex;
         align-items: center;  // center vertically

         &:hover {
            @include set-colors(table-hover);
         }

         &.selected {
            font-weight: bold;
         }

         &.divider {
            pointer-events: none;
            border-top: 1px solid var(--input-border);
            height: 0;
            margin: 0.5em 0;

            &:hover {
               @include set-colors(input);
            }
         }
      }

      option {
         overflow: hidden;
      }
   }

   .checkbox {
      position: relative;   /* for positioning of span:before */
      input {
         margin: 0 5px 0 0;

         /* replace default appearance, since we cannot control colors there */
         -webkit-appearance: none;
         -moz-appearance: none;
         appearance: none;
         height: calc(var(--row-height) - 4px);
         width: calc(var(--row-height) - 4px);
         aspect-ratio: 1/1;
         border: 1px solid var(--input-primary-border);
         border-radius: 0.5em;
         cursor: pointer;
      }

      > input:checked {
         border: 1px solid var(--input-primary-border);
         @include set-colors(input-primary);
         background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
         background-repeat: no-repeat;
      }

      > input:indeterminate {
         border: 1px solid var(--input-primary-border);
         @include set-colors(input-primary);
         background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e");
         background-repeat: no-repeat;
      }

      > input:active {
          border: 1px solid var(--input-primary-border); 
      }

   }
}

.multiAccountSelect {
   margin-bottom: 20px;  // leave space for the horizontal scrollbar
}
